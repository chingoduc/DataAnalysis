getwd()
load("D:/Workspace/DataAnalysis/.RData")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/cd4.data", destfile="./Data/cd4.data")
getwd()
setwd("D:/Workspace/DataAnalysis")
download.file("https://spark-public.s3.amazonaws.com/dataanalysis/cd4.data", destfile="./Data/cd4.data")
c4dData <- read.table("./data/c4d.data", col.names=c("time", "cd4", "age", "packs", "drugs", "sex", "cesd", "id"))
c4dData <- read.table("./data/cd4.data", col.names=c("time", "cd4", "age", "packs", "drugs", "sex", "cesd", "id"))
View(`c4dData`)
cd4Data <- c4dData
rm(c4dData)
cd4Data <- cd4Data[order(cd4Data$time),]
head(cd4Data)
plot(cd4Data$time, cd4Data$cd4, pch=19, cex=0.1)
point(mean(cd4Data$time[1:2]), mean(cd4Data$cd4[1:2]), col="blue", pch=19)
points(mean(cd4Data$time[1:2]), mean(cd4Data$cd4[1:2]), col="blue", pch=19)
points(mean(cd4Data$time[2:3]), mean(cd4Data$cd4[2:3]), col="blue", pch=19)
aveTime <- aveCd4 <- rep(NA, length(3:(dim(cd4Data)[1]-2)))
for(i in 3:(dim(cd4Data)[1]-2)) {}
for(i in 3:(dim(cd4Data)[1]-2)) {
aveTime[i] <- mean(cd4Data$time[(i-2):(i+2)])
aveCd4[i] <- mean(cd4Data$cd4[(i-2):(i+2)])
}
lines(aveTime, aveCd4, col="blue", lwd=3)
plot(cd4Data$time, cd4Data$cd4, pch=19, cex=0.1)
aveTime <- aveCd4 <- rep(NA, length(11:(dim(cd4Data)[1]-10)))
for(i in 11:(dim(cd4Data)[1]-2)) {
aveTime[i] <- mean(cd4Data$time[(i-10):(i+10)])
aveCd4[i] <- mean(cd4Data$cd4[(i-10):(i+10)])
}
lines(aveTime, aveCd4, col="blue", lwd=3)
plot(cd4Data$time,cd4Data$cd4,pch=19,cex=0.1)
aveTime <- aveCd4 <- rep(NA,length(201:(dim(cd4Data)[1]-200)))
for(i in 201:(dim(cd4Data)[1]-2)){
aveTime[i] <- mean(cd4Data$time[(i-200):(i+200)])
aveCd4[i] <- mean(cd4Data$cd4[(i-200):(i+200)])
}
lines(aveTime,aveCd4,col="blue",lwd=3)
filtTime <- as.vector(filter(cd4Data$time,filter=rep(1,200))/200)
filtCd4 <- as.vector(filter(cd4Data$cd4,filter=rep(1,200))/200)
plot(cd4Data$time,cd4Data$cd4,pch=19,cex=0.1); lines(filtTime,filtCd4,col="blue",lwd=3)
hotdogs <- read.csv("http://datasets.flowingdata.com/hot-dog-contest-winners.csv", sep=",", header=TRUE)
fill_colors <- c()
for(i in 1:length(hotdogs$Country)) {
if (hotdogs$Country[i] == "United States") {
fill_colors <- c(fill_colors, "#821122")
} else {
fill_colors <- c(fill_colors, "#cccccc")
}
}
barplot(hotdogs$Dogs.eaten, names.arg=hotdogs$Year, col=fill_colors, border=NA, xlab="Year", ylab="Hot dogs and buns (HDB) eaten")
save.image("D:/Workspace/DataAnalysis/Data-Visualization-Study.RData")
?avg
?average
sum
?sum
sum(hotdogs$Dogs.eaten)
summary(hotdogs$Dogs.eaten)
last5eaten <- c(hotdogs$Dogs.eaten[27:31])
last5eaten
mean(last5eaten)
summary(last5eaten)
plot(hotdogs$Dogs.eaten)
plot(hotdogs$Year, hotdogs$Dogs.eaten)
plot(hotdogs$Year, hotdogs$Dogs.eaten, p="3")
plot(hotdogs$Year, hotdogs$Dogs.eaten, p=3)
?plot
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="h", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="s", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="o", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="S", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="b", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="c", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="n", col=fill_colors, lwd=10)
plot(hotdogs$Year, hotdogs$Dogs.eaten, type="p", col=fill_colors, lwd=10)
install.packages(c("cluster", "foreign", "KernSmooth", "lattice", "Matrix", "nnet", "rpart", "survival"))
myFamilyNames <-c("Dad","Mom","Sis","Bro","Dog")
myFamilyAges <- c(43,42,12,8,5)
myFamilyGenders <- c("Male", "Female", "Female", "Male", "Female")
type(myFamilyGenders)
summary(myFamilyGenders)
sum(myFamilyGenders)
myFamilyWeights <- c(188,136,83,61,44)
myFamily <- data.frame(myFamilyNames, myFamilyAges, myFamilyGenders, myFamilyWeights)
myFamily
str(myFamily)
str(myFamilyGender)
str(myFamilyGenders)
myFamily[1]
myFamily[:1]
myFamily[0:1]
myFamily[1:0]
myFamily[:2]
myFamily[,2]
myFamily[1,]
myFamily[1,2:3]
myFamily[2:3,]
summary(myFamily)
myFamily[1,1] <- Daddy
myFamily[1,1] <- "Daddy"
myFamily[1,1]
View(myFamily)
View(myFamily)
myFamily[1,1] <- "Dad"
View(myFamily)
View(myFamily)
install.packages("hexbin")
hot_dog_places <- read.csv("http://datasets.flowingdata.com/hot-dog-places.csv", sep=",", header=TRUE)
names(hot_dog_places) <- c("2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010")
hot_dog_places
hot_dog_matrix <- as.matrix(hot_dog_places)
hot_dog_matrix
hot_dog_matrix[1,"2010"]
hot_dog_matrix[1,2]
barplot(hot_dog_matrix)
barplot(hot_dog_matrix, col=c("green","red","yellow"))
row(hot_dog_places)
summary(hot_dog_places)
summary(hot_dog_places[1,])
summary(hot_dog_places[1,1])
summary(hot_dog_places[,1])
barplot(hot_dog_matrix, border=NA, space=0.25, ylim=(c(0,200)), xlab="Year", ylab="Hot dogs and bns (HDBs) eaten", main="Hot Dog Eating Contest Results, 2000-2010")
View(dataMatrix)
getwd()
setwd("D:/Workspace/NMR")
getwd()
x <- read.csv("CopyOfDegas8_13_2010_12_1AM.txt", sep=";", header=FALSE, comment.char="\\")
head(x)
x[-3,]
head(x)
x <- x[-3,]
head(x)
x <- x[-1,]
x <- x[-1,]
head(x)
x <- x[,-5]
head(x)
names(x) <- c("RFID","date","time","gate")
head(x)
x$datetime <- paste(x$date, x$time)
head(x)
x$time <- as.POSIXct(x$datetime, format="%m/%d/%Y %H:%M:%S")
head(x)
summary(x$RFID)
barplot(x$RFID)
plot(x$RFID)
l <- split(x, x$RFID)
summary(l)
View(bupaData)
View(x)
summary(l[1])
summary(l[2])
help(lapply)
l1 <- lapply(l, function(x){
trimmed <- x[dupplicated(x),]
nr <- nrow(trimmed)
trimmed$time <- trimmed$time + seq_len(nr)/nr*(1/1000)
trimmed
})
help(dupplicated)
subscribers <- read.csv("http://datasets.flowingdata.com/flowingdata_subscribers.csv", sep=",", header=T)
head(subscribers)
plot(subscribers$Subscribers)
plot(subscribers$Subscribers, type="p", ylim=c(0,30000))
plot(subscribers$Subscribers, type="p", ylim=c(0,30000), xlab="Day", ylab="Subscribers")
points(subscribers$Subscribers, pch=19, col="black")
population <- read.csv("http://datasets.flowingdata.com/world-population.csv", sep=",", header=TRUE)
plot(population$Year, population$Population, type="l", ylim=(c(0,7E9), xlab="Year", ylab=))
plot(population$Year, population$Population, type="l", ylim=(c(0,7E9), xlab="Year", ylab="Population")
plot(population$Year, population$Population, type="l", ylim=(c(0,7E9)), xlab="Year", ylab="Population")
plot(population$Year, population$Population, type="l", ylim=(c(0,7000000000)), xlab="Year", ylab="Population")
plot(population$Year, population$Population, type="l", ylim=(c(0,7000000000)), xlab="Year", ylab="Population")
postage <- read.csv("http://datasets.flowingdata.com/us-postage.csv", sep=",", header=TRUE)
plot(postage$Year, postage$Price, type="s")
plot(postage$Year, postage$Price, type="s", main="US Postage Rates for Letters, First Ounce, 1991-2010", xlab="Year", ylab="Postage Rate (Dollars)")
plot(postage$Year, postage$Price, main="US Postage Rates for Letters, First Ounce, 1991-2010", xlab="Year", ylab="Postage Rate (Dollars)")
help(plot)
plot(postage$Year, postage$Price, type="l", main="US Postage Rates for Letters, First Ounce, 1991-2010", xlab="Year", ylab="Postage Rate (Dollars)")
x <- read.csv("CopyOfDegas8_13_2010_12_1AM.txt", sep=";", header=FALSE, comment.char="\\")
head(x)
x <- x[-1,]
x <- x[-1,]
x <- x[-1,]
x <- x[,-5]
names(x) <- c("RFID","date","time","gate")
x$datetime <- paste(x$date, x$time)
x$time <- as.POSIXct(x$datetime, format="%m/%d/%Y %H:%M:%S")
head(x)
1 <- split(x, x$RFID)
l <- split(x, x$RFID)
summary(l)
l[-1,]
l[1]
l[-1]
fix(l)
plot(x[1,1:5], plot.type="single")
install.packages("zoo")
warnings()
plot(x[1,1:5], plot.type="single")
plot(x[1,1:5], type="single")
plot.zoo(x[1,1:5], plot.type="single")
zoo.plot
zoo
zoo??
exit
View(population)
View(postage)
View(subscribers)
View(x)
View(subscribers)
rm(population, postage, subscribers)
fix(l)
fix(l)
